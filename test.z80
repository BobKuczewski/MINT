.engine mycomputer

.include "constants.z80"
.include "test.mac.asm"

LD SP,DSTACK
CALL initialize
ld HL,testGetCharImpl                       ; change getchar implmentation to use tbuf
LD (VGETCHAR),HL

test "3x! 1 x\\+ x@",4
test "0",0
test "1",1
test "123 456+", 579
test ":X1;X",1
test "2x!x@",2
test ":Aa!;3Aa@",3
test ":Aa!;:Ba@;4AB",4
test "100 0(6)",100
test "100 1(6)",6
test "2(6)+",12
test "1(\\i@)",0
test "1(1(\\i@ \\j@+))",0
test ":Aa!;3Aa@",3
test ":Aa!;:Ba@;4AB",4
test "100 0(6)",100
test "100 1(6)",6
test "2(6)+",12
test "1(\\i@)",0
test "1(1(\\i@ \\j@+))",0
test "2(2(\\i@ \\j@))+++++++",4
test "100a! 1 a\\+ a@",101
test "[]2-@",0
test "[10]@",10
test "0x! [1 2 3] a! a@ 1{-@ ( a@ \\i@ {+@ x@+ x! ) x@",6
; sum over array
CALL enter
DB "0 t!"                           ; total = 0
DB "[1 2 3 4 5] a!"                 ; declare array, store address
DB "a@ 1{-@ "                       ; get length of array for loop
DB "("                              ; loop
DB      "a@ \\i@ {+@"               ; access nth element
DB      "t@+ t!"                    ; add to total
DB ")"                              ; end loop
DB "t@"                             ; print total
DB 0
expect "sum over array",15

CALL enter
.cstr "`Done!`"

HALT

testGetCharImpl:
        PUSH HL
        LD HL,(tbPtr)
        LD A,(HL)
        INC HL
        LD (tbPtr),HL
        POP HL
        RET                 ;NZ flagged if character input

.include "MINT.asm"
